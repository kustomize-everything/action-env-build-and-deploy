---
name: env-build-and-deploy
description: |
  Uses kustomize to build and commit to an environment branch or opens a PR
inputs:
  environment:
    description: The environment to build and deploy or open/update a PR for
    required: true
  push-environment-regex:
    description: Regex to match environments which will be pushed to directly
    required: false
    default: .*(development|integration).*
  pr-environment-regex:
    description: |
      Regex to match environments which will push to a
      deploy-pr/env/<environment> branch and open a PR for review
    required: false
    default: .*(staging|production).*
  dry-run:
    description: |
      On a dry-run only the kustomize build will occur and the built branch will
      not be pushed anywhere.
    required: false
    default: 'true'
  working-directory:
    description: The location where the deployment git repo is checked out
    required: true
  version:
    description: Version of Kustomize to use
    required: false
    default: 4.5.5
  sha256-checksum:
    description: Checksum of Kustomize version
    required: false
    default: bba81aa61dba057db1d5abeddf1e522b568b2d906ab67a5c80935e97302c8773
  git-commit-user:
    description: Name to add to the Git Commit Message
    required: false
    default: Kustomize Everything
  git-commit-email:
    description: Email to add to the Git Commit Message
    required: false
    default: kustomize-everything@users.noreply.github.com
  git-commit-message:
    description: Commit message to use for deployment
    required: false
runs:
  using: composite
  steps:
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash

    # These variables are re-used by the run steps.
    - name: Shared ENV Setup
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        ENV: ${{ inputs.environment }}
      run: setup-shared-env.sh

    - uses: actions-ecosystem/action-regex-match@v2
      id: detect-push-environment
      with:
        text: ${{ inputs.environment }}
        regex: ${{ inputs.push-environment-regex }}

    - uses: actions-ecosystem/action-regex-match@v2
      id: detect-pr-environment
      with:
        text: ${{ inputs.environment }}
        regex: ${{ inputs.pr-environment-regex }}

    # Kustomize setup (this should be abstracted into a separate action repo)
    - name: Kustomize Setup
      uses: kustomize-everything/action-kustomize@v1.0.4
      with:
        version: ${{ inputs.version }}
        sha256-checksum: ${{ inputs.sha256-checksum }}

    - name: Set Git Author
      shell: bash
      run: |
        git config --global user.name ${{ inputs.git-commit-user }}
        git config --global user.email ${{ inputs.git-commit-email }}

    # Kustomize Build
    - name: Kustomize Build
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: kustomize-build.sh

    - name: Git commit and diff against ${DIFF_BRANCH}
      shell: bash
      id: diff
      working-directory: ${{ inputs.working-directory }}
      env:
        GIT_COMMIT_MESSAGE: ${{ inputs.git-commit-message }}
        GIT_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      run: commit-and-diff.sh

    - name: Find Comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Diff output against ${{env.DIFF_BRANCH}}

    - name: Create or update comment with No Changes
      if: ${{ github.event_name == 'pull_request' &&
        steps.fc.outputs.comment-id != 0 &&
        steps.diff.outputs.diff-bytes == 0 }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Diff output against ${{env.DIFF_BRANCH}}

          No changes detected.
        edit-mode: replace

    - name: Create or update comment with Diff
      if: ${{ github.event_name == 'pull_request' &&
        steps.diff.outputs.diff-bytes > 0 &&
        steps.diff.outputs.diff-bytes < 65000 }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          <details>
            <summary>Diff output against ${{env.DIFF_BRANCH}}</summary>

          ```diff
          ${{ steps.diff.outputs.diff }}
          ```
          </details>
        edit-mode: replace

    - name: Create or update comment with Too Big Diff
      if: ${{ github.event_name == 'pull_request' &&
        steps.diff.outputs.diff-bytes >= 65000 }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Diff output against ${{env.DIFF_BRANCH}}

          To large to display in a comment.

          Please [check the logs](${{env.RUN_URL}}).
        edit-mode: replace

    - name: Deploy to ${{ inputs.environment }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      if: ${{ inputs.dry-run == 'false' &&
        steps.detect-push-environment.outputs.match != '' }}
      run: |
        DEPLOY_BRANCH="${DEPLOY_BRANCH}"
        if ! git diff --quiet origin/${DEPLOY_BRANCH} ; then
          git push --set-upstream -f origin ${DEPLOY_BRANCH}
          echo "Changes pushed to ${DEPLOY_BRANCH} branch."
        else
          echo "There are no changes to push to ${DEPLOY_BRANCH} branch."
        fi

    - name: Open Deployment PR to ${{ inputs.environment }}
      id: open-pr
      uses: peter-evans/create-pull-request@v4
      if: ${{ inputs.dry-run == 'false' &&
        steps.detect-pr-environment.outputs.match != '' }}
      with:
        title: Deployment to ${{ inputs.environment }}
        commit-message: ${{ github.event.head_commit.message }}
        base: ${{ env.DEPLOY_BRANCH }}
        branch: deploy-pr/${{ env.DEPLOY_BRANCH }}
        path: ${{ inputs.working-directory }}

    - name: PR Opened or Updated
      if: ${{ steps.open-pr.outputs.pull-request-number &&
        (steps.open-pr.outputs.pull-request-operation == 'created' ||
          steps.open-pr.outputs.pull-request-operation == 'updated') }}
      shell: bash
      run: |
        echo "The deployment PR for ${{ inputs.environment }} is waiting for
          deployment after PR review and merge."
        echo "Please review the k8s manifests in this PR and merge if ready
          to deploy to ${{ inputs.environment }}."
        echo "${{ steps.cpr.outputs.pull-request-url }}"

    - name: PR Closed
      if: ${{ steps.open-pr.outputs.pull-request-number &&
        steps.open-pr.outputs.pull-request-operation == 'closed' }}
      shell: bash
      run: |
        echo "The deployment PR for ${{ inputs.environment }} has been closed as
          there are no changes detected."
        echo "${{ steps.cpr.outputs.pull-request-url }}"
